<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "dtd/document-v20.dtd">
<document>
	<header>
		<title>Scriptella Reference Documentation</title>
		<authors>
			<person name="Fyodor Kupolov" email="kupolov@gmail.com"/>
		</authors>
	</header>
	<body>
		<section>
			<title>Introduction</title>
			<p>Scriptella is a Java-based ETL and scripts execution tool. The primary scripting language is a plain old SQL executed by the JDBC bridge. 
			At the same time other non-JDBC providers could be easily added allowing to mix SQL scripts with other scripting languages.</p>
			<p>The following diagram is an overview of the Scriptella execution model:
			<img src="images/ref-intro.gif" alt="Architecture Overview"/>
			</p>
			<section>
				<title>When to use</title>
				<p>There is no silver bullet and you have to pick a right tool aligned with your goals. Here is a list of scenarious when Scripella may be a very helpful tool:</p>
				<ul>
					<li>Storing database SQL scripts. Scriptella allows you to easily execute SQL scripts without dependencies on database vendor SQL tools. Moreover you can reference BLOB content, e.g. files, and use other jdbc features in your scripts.</li>
					<li>Working with several datasources. For example gathering statistics from the one database and store it inside the other one</li>
					<li>If you prefer to write <source>SELECT * FROM Account WHERE login=?name</source> instead of using a "Smart Query Designer GUI"</li>
				</ul>
				<p>Of course there are situations when you'd probably try to find a better tool:</p>
				<ul>
					<li>Database replication,i.e. one-to-one copy of the database content. There are plenty of tools doing this job easier.</li>
				</ul>
			</section>
		</section>
		<section>
			<title>System Requirements</title>
			<p>Scriptella requires JDK or JRE version 5.0 or later to operate.</p>
			<p>The memory requirements are dependant on your script content and referenced connection providers. For example if in-process database connections are used inside a script we recommend to use at least 512Mb of RAM.</p>
		</section>
		<section>
			<title>Installation</title>
		</section>
		<section>
			<title>XML Script Elements</title>
			<note>For details about all XML elements consult a <a href="../docs/dtd/">Scriptella DTD Documentation</a>
			</note>
			<p>The following XML stanza briefly covers main Scriptella XML elements:</p><source><![CDATA[
<!DOCTYPE scripts SYSTEM "http://scriptella.javaforge.com/dtd/scriptella.dtd">
<scripts>
    <description></description>
	<properties>
        <include href="script.properties"/>
	</properties>
    <connection id="con1" driver="$driver" url="${url}" user="$user" password="12345678"/>
    <connection id="con2" driver="org.hsqldb.jdbcDriver" url="jdbc:hsqldb:file:db" user="sa" password=""/>
    <script connection-id="out">
	    <include href="dbschema.sql"/>
    </script>
    <query connection-id="in">
        SELECT * from Bug
        <script connection-id="out">
            INSERT INTO Bug VALUES (?ID, ?priority, ?summary, ?status);
        </script>
    </query>
</scripts>]]></source>
			<p>&lt;scripts&gt; is a root element of all Scriptella files.</p>
			<section>
				<title>Properties</title>
				<p>In this element define properties to be substituted in other script elements. This concept is similar to
                Ant except that overriding a property value is POSSIBLE in Scriptella.</p>
				<p>&lt;include&gt; element is used to insert external content. This concept is almost identical to XInclude</p>
			</section>
			<fixme author="ejboy">Describe all elements</fixme>
		</section>
		<section>
			<title>Expressions and Properties Substitution</title>
			<p>Scriptella supports properties substitution and expression evaluation based on the following syntax:</p>
			<ul>
				<li>$Property_Name - inserts a value of the specified property</li>
				<li>${expression} - inserts a value of the expression evaluation.
                    <a href="http://jakarta.apache.org/commons/jexl">JEXL</a> syntax is used for expressions.</li>
				<li>?Propery_Name or ?{expression} are used only in queries and scripts to set prepared statement parameters</li>
			</ul>
			<note>
                This syntax is only valid for Scriptella configuration elements and SQL scripts processed by JDBC Provider,
                other providers may not support properties/expressions substitution.
            </note>
			<section>
				<title>Implicit Variables</title>
				<p>The following implicit variables are available in scripts and queries:</p>
				<table>
					<tr>
						<th>Variable</th>
						<th>Description</th>
						<th>Context</th>
					</tr>
					<tr>
						<td>
							<code>this</code>
						</td>
						<td>This variables provides the following methods and properties:
                            <ul>
								<li>scriptFileURL - URL of the script file being executed</li>
								<li>file(relativeURL) - inserts a file with URL relative to scriptFileURL. Useful for BLOB parameters.</li>
							</ul>
						</td>
						<td>Query/Script</td>
					</tr>
					<tr>
						<td>
							<code>rownum</code>
						</td>
						<td>Represents row number of query result set. Starts with 1.</td>
						<td>Nested elements of Query</td>
					</tr>
				</table>
				<p>Additionally each query produces a set of implicit variables corresponding to selected column names. These variables are available in nested elements.</p>
			</section>
			<section>
				<title>Examples</title>
				<p>Execute a query for table specified by TABLE  property and inserts the first row into TABLE2</p>
				<source><![CDATA[
    <query>
        SELECT V1, V2, V3 from $TABLE;
        <script if="rownum==1">
            INSERT INTO $TABLE2 VALUES (?V1, ?{V2+V3});
        </script>
    </query>]]></source>
			</section>
		</section>
		<section>
			<title>Command Line Execution</title>
			<fixme author="ejboy">Describe command line tools</fixme>
		</section>
		<section>
			<title>Ant Integration</title>
			<section>
				<title>System requirements</title>
				<p>Ant 1.6 or later is recommended.</p>
			</section>
			<section>
				<title>Installation</title>
				<p>Use scriptella.jar from the binary distribution. This file contains all necessary classes and
                    resources for integration with Ant.</p>
				<p>In order to use scriptella as Ant task you will need the following taskdef declaration:</p>
				<source><![CDATA[<taskdef resource="antscriptella.properties" classpath="/path/to/scriptella.jar"/>]]></source>
				<p>You also have to add paths to database drivers used inside the script:</p>
				<source><![CDATA[<taskdef resource="antscriptella.properties"
   <classpath>
       <pathelement location="$SCRIPTELLA_HOME/scriptella.jar">
       <pathelement location="lib/hsqldb.jar">
       <pathelement location="lib/jconn2.jar">
   </classpath>
</taskdef>]]></source>
			</section>
			<section>
				<title>Scriptella &quot;Execute&quot; Task</title>
				<section>
					<title>Parameters</title>
					<table>
						<tr>
							<th>Attribute</th>
							<th>Description</th>
							<th>Required</th>
						</tr>
						<tr>
							<td>file</td>
							<td>The script file to execute.</td>
							<td>Yes, unless a nested &lt;fileset&gt; element is used.</td>
						</tr>
						<tr>
							<td>inheritAll</td>
							<td>If true, pass Ant project properties to the Script Executor.</td>
							<td>No, default value is false.</td>
						</tr>
						<tr>
							<td>debug</td>
							<td>If true print debugging information.</td>
							<td>No, default value is false.</td>
						</tr>
						<tr>
							<td>quiet</td>
							<td>If true be extra quiet.</td>
							<td>No, default value is false.</td>
						</tr>
					</table>
				</section>
				<section>
					<title>Nested Elements</title>
					<p>The task supports nested
                        <a href="http://ant.apache.org/manual/CoreTypes/fileset.html">&lt;fileset&gt;</a>
                        element.
                    </p>
				</section>
				<section>
					<title>Examples</title>
					<p>
						<em>Executes script.xml file in the current directory:</em>
					</p>
					<source>&lt;execute/&gt;</source>
					<p>
						<em>Executes sql.xml file in the current directory:</em>
					</p>
					<source>&lt;execute file="sql.xml"/&gt;
                    </source>
					<p>
						<em>Executes all xml files in db directory:</em>
					</p>
					<source>&lt;execute&gt;
   &lt;fileset dir="db" includes="*.xml"/&gt;
&lt;/execute&gt;</source>
				</section>
			</section>
		</section>
		<section>
			<title>Non-relational Datasources Interoperability</title>
			<p>We plan to include built-in support for CSV files and LDAP directories, so
                it would be possible to embed CSV data or LDIF files directly into script files.
            </p>
			<p>Currently we recommend various JDBC bridges to work with specific datasources like directories, CSV files, XML files or object databases.
            </p>
			<section>
				<title>Accesing directories based on LDAP</title>
				<p>The freely available
                    <a href="http://www.openldap.org/jdbcldap/">JDBC-LDAP Bridge Driver</a>
                    (JDBC-LDAP) enables you to access information held in directories.
                </p>
				<p>See
                    <a href="http://www.octetstring.com/support/jdbcldapdriver/GettingStarted.php">Getting Started
                        Documentation</a>
                    .
                </p>
				<p>A similar driver is offered by Novell. See
                    <a href="http://developer.novell.com/ndk/doc/ldapjdbc/">LDAP JDBC Driver</a>
                    for more details.
                </p>
			</section>
			<section>
				<title>Working with CSV data</title>
				<p>
					<a href="http://www.hsqldb.org/doc/guide/ch06.html">HSQLDB text tables</a>
                    feature could be used to work
                    with CSV files.
                </p>
			</section>
		</section>
		<section>
			<title>Examples</title>
			<fixme author="ejboy">Describe examples here</fixme>
		</section>
		<section>
			<title>Best Practices</title>
		</section>
	</body>
</document>
