<!--
 Copyright 2006 The Scriptella Project Team.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<!DOCTYPE etl SYSTEM "http://scriptella.javaforge.com/dtd/etl.dtd">
<etl>
    <description>
        This script produces prime numbers and builds a HTML report.
    </description>
    <properties>
        <include href="script.properties"/>
    </properties>

    <!--Set up a connection to janino compiler.-->
    <connection id="janino" driver="janino" classpath="../lib/janino.jar"/>
    <!--Set up a connection to velocity engine.
    url parameter specifies a path to file relative to a script file directory-->
    <connection id="velocity" driver="velocity" url="report.html" classpath="../lib/velocity-dep.jar"/>
    <!--Set up an in-memory connection to HSQLDB database.
    hsql - driver name is a Scriptella adapter for HSQLDB.
    You may specify org.hsqldb.jdbcDriver directly, see JDBC Adapters in Scriptella reference-->
    <connection id="db" driver="hsqldb" url="jdbc:hsqldb:mem:mix" user="sa" classpath="../lib/hsqldb.jar"/>

    <!--Set up CSV driver-->
    <connection id="csv" driver="csv" url="report.csv" classpath="../lib/opencsv.jar">
        #If necessary use empty quote char to suppress quotes
        quote=
        #Use Excel compatible separator for output
        #Note: the syntax of script is not affected you should use standard CSV syntax
        separator=;
    </connection>

    <!--Create a database schema. Single table for prime numbers. -->
    <script connection-id="db">
        CREATE TABLE Primes (
            Number INTEGER PRIMARY KEY
        );
    </script>
    <!--Use janino to produce prime numbers and expose a virtual row set
    to be used by nested script element. Don't forget about using CDATA.-->
    <query connection-id="janino">
        <![CDATA[
        int n = Integer.parseInt((String)get("max_prime")); //reads a property
        for (int i=2;i<=n;i++) {
            boolean prime=true;
            for (int j=2;j<i;j++) {
                if (i%j==0) {
                    prime=false;
                    break;
                }
            }
            if (prime) {
                //produce a virtual row having one column "i"
                set("i", new Integer(i));
                next();
            }
        }

        ]]>
        <!-- This script is called for each row produced by outer Janino query. -->
        <script connection-id="db">
            INSERT INTO Primes VALUES(?i);
        </script>
    </query>
    <!-- Now we generate a report header.
     Don't forget about using CDATA.-->
    <script connection-id="velocity">
        <![CDATA[
        <html>
            <head>
                <title>$report_title</title>
            </head>
            <body>
                <h1>$report_header</h1>
                <table border=1>
        ]]>
    </script>
    <!--Write CSV file header.
    Please note that standard comma separated CSV syntax is used,
     commas are transparently converted to semicolumns by CSV driver-->
    <script connection-id="csv">
        #,Prime
    </script>
    <!--Query the database for primes-->
    <query connection-id="db">
        SELECT * FROM Primes
        <!--And use this row set to produce a table.
         rownum - is an implicit variable containing current row number
         number is the name of the column in the Primes table-->
        <script connection-id="velocity">
<![CDATA[
                <tr>
                    <th>${rownum}</th><td>${number}</td>
                </tr>]]>
        </script>
        <!--Producing a CSV file-->
        <script connection-id="csv">
            ${rownum},${number}
        </script>
    </query>
    <!--And finally produce a report footer -->
    <script connection-id="velocity">
<![CDATA[
                </table>
                $report_footer
            </body>
        </html>
        ]]>
    </script>


</etl>